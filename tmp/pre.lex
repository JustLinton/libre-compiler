
=======
after preprocessing
const a=10;  var d,e,f;  procedure p;  var g;  begin    d:=a*2;    e:=a/3;    if d<=e then f:=d+e  end;  begin    read(e,f);    write(e,f,d);    call p;    while odd d do e:=-e+1  end. 

SYM name       SYM value            SYM row
K_CONST        const                1
ID             a                    1
O_EQ           =                    1
NUM            10                   1
D_SEMICOLON    ;                    1
K_VAR          var                  2
ID             d                    2
D_COMMA        ,                    2
ID             e                    2
D_COMMA        ,                    2
ID             f                    2
D_SEMICOLON    ;                    2
K_PROCEDURE    procedure            3
ID             p                    3
D_SEMICOLON    ;                    3
K_VAR          var                  4
ID             g                    4
D_SEMICOLON    ;                    4
K_BEGIN        begin                5
ID             d                    6
O_ASSIGN       :=                   6
ID             a                    6
O_MULTI        *                    6
NUM            2                    6
D_SEMICOLON    ;                    6
ID             e                    7
O_ASSIGN       :=                   7
ID             a                    7
O_DIV          /                    7
NUM            3                    7
D_SEMICOLON    ;                    7
K_IF           if                   8
ID             d                    8
O_LEQ          <=                   8
ID             e                    8
K_THEN         then                 8
ID             f                    8
O_ASSIGN       :=                   8
ID             d                    8
O_PLUS         +                    8
ID             e                    8
K_END          end                  9
D_SEMICOLON    ;                    9
K_BEGIN        begin               10
K_READ         read                11
D_LP           (                   11
ID             e                   11
D_COMMA        ,                   11
ID             f                   11
D_RP           )                   11
D_SEMICOLON    ;                   11
K_WRITE        write               12
D_LP           (                   12
ID             e                   12
D_COMMA        ,                   12
ID             f                   12
D_COMMA        ,                   12
ID             d                   12
D_RP           )                   12
D_SEMICOLON    ;                   12
K_CALL         call                13
ID             p                   13
D_SEMICOLON    ;                   13
K_WHILE        while               14
K_ODD          odd                 14
ID             d                   14
K_DO           do                  14
ID             e                   14
O_ASSIGN       :=                  14
O_MINUS        -                   14
ID             e                   14
O_PLUS         +                   14
NUM            1                   14
K_END          end                 15
D_PERIOD       .                   15
